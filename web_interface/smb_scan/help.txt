Crypt0s's Django Helper:

1.) To enable admin, you've got to have an admin.py in your app root

The app and the project are separate -- you still have to enable the admin panel in the settings and enable the URL mapping to admin in the urls.py file.
Once you've enabled urls.py and settings.py to do admin, you'll be able to get to it.

Dont forget to sync the DB to install the admin stuff to the project's database before starting anything


2.) When you make an app, you want the project server to be able to find it's pages
make a line in the urls.py pointing a pattern at the include('yourapp.urls')

then make a urls in your project to handel the urls thrown to it by that line in the project server.



3.) TEMPLATES:
django.template.loaders.app_directories.Loader which looks for a “templates” subdirectory in each of the INSTALLED_APPS - this is how Django knows to find the polls templates even though we didn’t modify TEMPLATE_DIRS,

-make a template directory in your app dir.
-make a directory in that with the same name as your app
-make a file in that called index.html

Template namespacing
Now we might be able to get away with putting our templates directly in polls/templates (rather than creating another polls subdirectory), but it would actually be a bad idea. Django will choose the first template it finds whose name matches, and if you had a template with the same name in a different application, Django would be unable to distinguish between them. We need to be able to point Django at the right one, and the easiest way to ensure this is by namespacing them. That is, by putting those templates inside another directory named for the application itself.


